{
  "_args": [
    [
      "cssauron-falafel@^1.2.1",
      "/Users/paul/work/node/angular-seed/node_modules/angular-injector"
    ]
  ],
  "_from": "cssauron-falafel@>=1.2.1 <2.0.0",
  "_id": "cssauron-falafel@1.2.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/cssauron-falafel",
  "_npmUser": {
    "email": "chris@neversaw.us",
    "name": "chrisdickinson"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "cssauron-falafel",
    "raw": "cssauron-falafel@^1.2.1",
    "rawSpec": "^1.2.1",
    "scope": null,
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/angular-injector"
  ],
  "_resolved": "https://registry.npmjs.org/cssauron-falafel/-/cssauron-falafel-1.2.1.tgz",
  "_shasum": "37bb3f8e94fdb4a69ac5a7668186a3a842be7dce",
  "_shrinkwrap": null,
  "_spec": "cssauron-falafel@^1.2.1",
  "_where": "/Users/paul/work/node/angular-seed/node_modules/angular-injector",
  "author": {
    "email": "chris@neversaw.us",
    "name": "Chris Dickinson"
  },
  "bugs": {
    "url": "https://github.com/chrisdickinson/cssauron-falafel/issues"
  },
  "dependencies": {
    "cssauron": "1.1.0"
  },
  "description": "falafel bindings for cssauron",
  "devDependencies": {
    "falafel": "~0.3.1"
  },
  "directories": {},
  "dist": {
    "shasum": "37bb3f8e94fdb4a69ac5a7668186a3a842be7dce",
    "tarball": "http://registry.npmjs.org/cssauron-falafel/-/cssauron-falafel-1.2.1.tgz"
  },
  "homepage": "https://github.com/chrisdickinson/cssauron-falafel#readme",
  "keywords": [
    "ast",
    "cssauron",
    "falafel",
    "modification"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chrisdickinson",
      "email": "chris@neversaw.us"
    }
  ],
  "name": "cssauron-falafel",
  "optionalDependencies": {},
  "readme": "# cssauron-falafel\n\ncssauron bindings for falafel / esprima JS ASTs.\n\nIt shortens the esprima names they're a bit verbose.\n\nIt also supports `.relation` classes -- for example:\n\n```\nif(x) {\n\n}\n\nif(x > y) {\n\n}\n\nif(100) {\n\n}\n```\n\nIf we wanted to select all of the if tests (\"x\", \"x > y\", \"100\"), we could use the\nfollowing selectors:\n\n```\nif > *:first-child                  // lil verbose!\n.test                               // test the relation from the parent, not the node type\nif > .test                          // more specific -- only \".test\" relations from \"if\" statements.\n```\n\n# node types\n\n    LabeledStatement\t    ->\tlabel\n    BlockStatement\t        ->\tblock\n    Program\t                ->\troot\n    ExpressionStatement\t    ->\texpr\n    ConditionalExpression\t->\tternary\n    IfStatement\t        \t->\tif\n    BreakStatement\t    \t->\tbreak\n    ContinueStatement\t\t->\tcontinue\n    WithStatement\t    \t->\twith\n    SwitchStatement\t    \t->\tswitch\n    ReturnStatement\t    \t->\treturn\n    ThrowStatement\t    \t->\tthrow\n    TryStatement\t    \t->\ttry\n    WhileStatement\t    \t->\twhile\n    DoWhileStatement\t\t->\tdo-while\n    ForStatement\t    \t->\tfor\n    ForInStatement\t    \t->\tfor-in\n    FunctionDeclaration\t\t->\tfunction\n    VariableDeclaration\t\t->\tvariable-decl\n    VariableDeclarator\t\t->\tvariable\n    LogicalExpression\t\t->\tbinary\n    BinaryExpression\t\t->\tbinary\n    AssignmentExpression\t->\tassign\n    ArrayExpression\t    \t->\tarray\n    ObjectExpression\t\t->\tobject\n    ObjectKeyExpression\t\t->\tkey\n    FunctionExpression\t\t->\tfunction\n    SequenceExpression\t\t->\tsequence\n    UpdateExpression\t\t->\tupdate\n    UnaryExpression\t    \t->\tunary\n    CallExpression\t    \t->\tcall\n    NewExpression\t    \t->\tnew\n    MemberExpression\t\t->\tlookup\n    SwitchClause\t    \t->\tcase\n    CatchClause\t        \t->\tcatch\n    DebuggerStatement\t\t->\tdebugger\n    ThisExpression\t    \t->\tthis\n    Identifier\t        \t->\tid\n    Literal\t            \t->\tliteral\n\n# license\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/cssauron-falafel.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.2.1"
}
